openapi: 3.0.3

info:
  title: "Project API"
  version: "1.0.0"
  description: "A Contract-First project using Swagger and Spring Boot for example responses."

servers:
  - url: "http://localhost:8080"
    description: "Local development server."

tags:
  - name: "Example"
    description: "APIs for returning example responses."

paths:
  /public/example:
    get:
      tags:
        - "Example"
      summary: "Return an example response"
      description: "This endpoint returns a simple OK response with a message for demonstration purposes."
      operationId: "getExampleResponse"
      responses:
        "200":
          description: "OK - The request was successfully processed and returns an example response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "default":
          description: "An unexpected error occurred."

  /security/example:
    get:
      tags:
        - "Example"
      summary: "Return a secured response"
      description: "This endpoint requires JWT authentication and returns a secure example response."
      operationId: "getSecuredData"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "OK - Authenticated request was successful and returns a secure response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                code: "200"
                message: "Authenticated request was successful!"
        "401":
          description: "Unauthorized - Authentication credentials were missing or invalid."
        "403":
          description: "Forbidden - You do not have access to this resource."
        "default":
          description: "An unexpected error occurred."

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Response:
      type: object
      properties:
        code:
          type: string
          description: "HTTP status code returned by the server."
          example: "200"
        message:
          type: string
          description: "A brief message describing the outcome of the request."
          example: "Request was successful!"
